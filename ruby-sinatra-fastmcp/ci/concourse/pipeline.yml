---
# Concourse CI/CD Pipeline for ruby-sinatra-fastmcp
# Equivalent to GitHub Actions workflow: ruby-sinatra-fastmcp.yml and deploy-ruby-sinatra-fastmcp-to-tp4cf.yml

resource_types:
  - name: cf-cli
    type: docker-image
    source:
      repository: nulldriver/cf-cli-resource
      tag: latest

resources:
  - name: source-code
    type: git
    source:
      uri: ((git_repo_url))
      branch: ((git_branch))
      paths:
        - ruby-sinatra-fastmcp/**
        - ruby-sinatra-fastmcp/ci/concourse/**

  - name: build-artifacts
    type: s3
    source:
      bucket: ((artifact_bucket))
      access_key_id: ((aws_access_key))
      secret_access_key: ((aws_secret_key))
      region_name: ((aws_region))
      versioned_file: ruby-sinatra-fastmcp/artifacts.tar.gz

  - name: cf-environment
    type: cf-cli
    source:
      api: ((cf_api))
      username: ((cf_username))
      password: ((cf_password))
      org: ((cf_org))
      space: ((cf_space))

jobs:
  - name: build-and-test
    plan:
      - get: source-code
        trigger: true
      - task: build-and-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ruby
              tag: '3.2.5'
          inputs:
            - name: source-code
          outputs:
            - name: build-output
          run:
            path: bash
            args:
              - -c
              - |
                cd source-code/ruby-sinatra-fastmcp

                # Install dependencies
                echo "Installing dependencies..."
                gem install bundler
                bundle install

                # Run tests if available
                echo "Running tests..."
                if [ -d "test" ]; then
                  bundle exec rake test || echo "Test execution failed"
                else
                  echo "No tests found, skipping tests"
                fi

                # Create package
                echo "Creating package..."
                mkdir -p dist
                zip -r dist/ruby-sinatra-fastmcp.zip . -x "*.git*" "*.env*" ".github/*" "dist/*" "test/*" "spec/*"

                # Package artifacts
                echo "Packaging artifacts..."
                mkdir -p ../../build-output
                cp -r dist/ruby-sinatra-fastmcp.zip ../../build-output/
                cd ../../build-output
                tar -czf artifacts.tar.gz ruby-sinatra-fastmcp.zip
      - put: build-artifacts
        params:
          file: build-output/artifacts.tar.gz

  - name: deploy-to-cf
    plan:
      - get: source-code
        passed: [build-and-test]
        trigger: true
      - get: build-artifacts
        passed: [build-and-test]
      - task: prepare-deployment
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ubuntu
              tag: latest
          inputs:
            - name: source-code
            - name: build-artifacts
          outputs:
            - name: app-to-deploy
          run:
            path: bash
            args:
              - -c
              - |
                # Extract artifacts
                mkdir -p app-to-deploy
                tar -xzf build-artifacts/artifacts.tar.gz -C app-to-deploy
                cd app-to-deploy
                unzip ruby-sinatra-fastmcp.zip -d ruby-sinatra-fastmcp

                # Copy manifest and any other required files
                cp -f ../source-code/ruby-sinatra-fastmcp/manifest.yml ruby-sinatra-fastmcp/
                cp -f ../source-code/ruby-sinatra-fastmcp/Procfile ruby-sinatra-fastmcp/ || echo "Procfile not found"
      - put: cf-environment
        params:
          command: push
          app_name: ruby-sinatra-fastmcp
          path: app-to-deploy/ruby-sinatra-fastmcp
          manifest: app-to-deploy/ruby-sinatra-fastmcp/manifest.yml
          no_start: true
      - put: cf-environment
        params:
          command: set-env
          app_name: ruby-sinatra-fastmcp
          env:
            RACK_ENV: production
            OPENAI_API_KEY: ((openai_api_key))
      - put: cf-environment
        params:
          command: start
          app_name: ruby-sinatra-fastmcp
          staging_timeout: 15
          startup_timeout: 5
