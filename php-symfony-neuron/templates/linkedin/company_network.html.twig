{% extends 'base.html.twig' %}

{% block title %}{{ company.name }} - LinkedIn Network Analysis{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .network-header {
            padding: 2rem;
            background-color: #f8f9fa;
            border-radius: 0.5rem;
            margin-bottom: 2rem;
        }
        
        .stats-card {
            padding: 1.5rem;
            height: 100%;
            border-radius: 0.5rem;
            text-align: center;
            background-color: white;
            box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.075);
            transition: transform 0.2s;
        }
        
        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15);
        }
        
        .stats-value {
            font-size: 2.5rem;
            font-weight: 700;
            color: #0d6efd;
            margin-bottom: 0.5rem;
        }
        
        .stats-label {
            font-size: 1rem;
            color: #6c757d;
        }
        
        .network-visualization {
            height: 400px;
            background-color: #f8f9fa;
            border-radius: 0.5rem;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }
        
        .chart-container {
            height: 300px;
        }
        
        .executive-label {
            font-size: 0.875rem;
            font-weight: 600;
            margin-bottom: 0.25rem;
        }
        
        .progress {
            height: 1rem;
            margin-bottom: 1rem;
        }
        
        .network-node {
            display: inline-block;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: #0d6efd;
            margin: 10px;
            position: relative;
            box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.075);
        }
        
        .network-node.executive {
            background-color: #0d6efd;
        }
        
        .network-node.company {
            background-color: #dc3545;
        }
        
        .network-node.connection {
            background-color: #6c757d;
            width: 30px;
            height: 30px;
        }
        
        .node-label {
            position: absolute;
            bottom: -20px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.75rem;
            white-space: nowrap;
        }
        
        .network-legend {
            margin-top: 1rem;
            display: flex;
            justify-content: center;
            gap: 2rem;
        }
        
        .legend-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .legend-color {
            width: 16px;
            height: 16px;
            border-radius: 50%;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Industry distribution chart
            const industryCtx = document.getElementById('industryChart').getContext('2d');
            const industryChart = new Chart(industryCtx, {
                type: 'pie',
                data: {
                    labels: [
                        'Finance', 
                        'Technology', 
                        'Healthcare', 
                        'Manufacturing', 
                        'Retail',
                        'Other'
                    ],
                    datasets: [{
                        data: [
                            {{ connectionStats.industry.finance }},
                            {{ connectionStats.industry.technology }},
                            {{ connectionStats.industry.healthcare }},
                            {{ connectionStats.industry.manufacturing }},
                            {{ connectionStats.industry.retail }},
                            {{ connectionStats.industry.other }}
                        ],
                        backgroundColor: [
                            '#4e73df',
                            '#1cc88a',
                            '#36b9cc',
                            '#f6c23e',
                            '#e74a3b',
                            '#858796'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right',
                        }
                    }
                }
            });
            
            // Create a simple network visualization using HTML/CSS
            // In a real application, you would use a library like D3.js or Sigma.js
            function initNetworkVisualization() {
                const container = document.getElementById('networkVisualization');
                const executives = {{ executives|length }};
                const connectionsPerExecutive = {{ (connectionStats.totalConnections / (executives > 0 ? executives : 1))|round }};
                
                // Add executive nodes
                {% for executive in executives %}
                    const execNode = document.createElement('div');
                    execNode.className = 'network-node executive';
                    execNode.style.left = `${Math.random() * 60 + 20}%`;
                    execNode.style.top = `${Math.random() * 40 + 30}%`;
                    
                    const execLabel = document.createElement('div');
                    execLabel.className = 'node-label';
                    execLabel.textContent = '{{ executive.name|slice(0, 15) }}{{ executive.name|length > 15 ? "..." : "" }}';
                    execNode.appendChild(execLabel);
                    
                    container.appendChild(execNode);
                {% endfor %}
                
                // Add company connections
                for (let i = 0; i < {{ connectionStats.companyConnections }}; i++) {
                    const companyNode = document.createElement('div');
                    companyNode.className = 'network-node company';
                    companyNode.style.left = `${Math.random() * 80 + 10}%`;
                    companyNode.style.top = `${Math.random() * 60 + 20}%`;
                    container.appendChild(companyNode);
                }
                
                // Add some random connections
                for (let i = 0; i < 20; i++) {
                    const connectionNode = document.createElement('div');
                    connectionNode.className = 'network-node connection';
                    connectionNode.style.left = `${Math.random() * 90 + 5}%`;
                    connectionNode.style.top = `${Math.random() * 80 + 10}%`;
                    container.appendChild(connectionNode);
                }
            }
            
            initNetworkVisualization();
        });
    </script>
{% endblock %}

{% block body %}
<div class="container mt-5">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="{{ path('company_index') }}">Companies</a></li>
            <li class="breadcrumb-item"><a href="{{ path('company_show', {'id': company.id}) }}">{{ company.name }}</a></li>
            <li class="breadcrumb-item active" aria-current="page">LinkedIn Network Analysis</li>
        </ol>
    </nav>
    
    {% for label, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ label }} alert-dismissible fade show" role="alert">
                {{ message }}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        {% endfor %}
    {% endfor %}
    
    <div class="network-header shadow-sm">
        <div class="row">
            <div class="col-md-8">
                <h1 class="mb-3">LinkedIn Network Analysis</h1>
                <p class="lead">Explore the professional network of {{ company.name }}'s leadership team</p>
                <p>This analysis leverages LinkedIn data from the company's executive profiles to provide insights into industry connections and potential business relationships.</p>
            </div>
            <div class="col-md-4 text-center text-md-end">
                <img src="https://upload.wikimedia.org/wikipedia/commons/c/ca/LinkedIn_logo_initials.png" alt="LinkedIn" style="height: 60px;">
            </div>
        </div>
    </div>
    
    <!-- Network Stats -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="stats-card">
                <div class="stats-value">{{ connectionStats.totalConnections }}</div>
                <div class="stats-label">Total Connections</div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="stats-card">
                <div class="stats-value">{{ connectionStats.executivesWithLinkedIn }}</div>
                <div class="stats-label">Executives with LinkedIn</div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="stats-card">
                <div class="stats-value">{{ connectionStats.companyConnections }}</div>
                <div class="stats-label">Direct Company Connections</div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <!-- Network Visualization -->
        <div class="col-md-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h3 class="mb-0">Network Visualization</h3>
                </div>
                <div class="card-body">
                    <div id="networkVisualization" class="network-visualization position-relative">
                        <!-- Network nodes will be dynamically added here by JavaScript -->
                    </div>
                    
                    <div class="network-legend">
                        <div class="legend-item">
                            <div class="legend-color" style="background-color: #0d6efd;"></div>
                            <div>Company Executives</div>
                        </div>
                        <div class="legend-item">
                            <div class="legend-color" style="background-color: #dc3545;"></div>
                            <div>Direct Company Connections</div>
                        </div>
                        <div class="legend-item">
                            <div class="legend-color" style="background-color: #6c757d;"></div>
                            <div>Second-degree Connections</div>
                        </div>
                    </div>
                    
                    <p class="text-muted text-center mt-2">
                        <small>This is a simplified visualization. For detailed analytics, click on individual executives.</small>
                    </p>
                </div>
            </div>
        </div>
        
        <!-- Industry Distribution -->
        <div class="col-md-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h3 class="mb-0">Industry Distribution</h3>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="industryChart"></canvas>
                    </div>
                    <p class="text-muted text-center mt-3">
                        <small>Distribution of connections by industry</small>
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Executive LinkedIn Profiles -->
    <div class="card shadow-sm mb-4">
        <div class="card-header">
            <h3 class="mb-0">Executive LinkedIn Profiles</h3>
        </div>
        <div class="card-body">
            {% if executives is empty %}
                <div class="alert alert-info">
                    <p class="mb-0">No executive profiles found for this company.</p>
                </div>
            {% else %}
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Title</th>
                                <th>LinkedIn Status</th>
                                <th>Connections</th>
                                <th>Last Synced</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for executive in executives %}
                                <tr>
                                    <td>{{ executive.name }}</td>
                                    <td>{{ executive.title }}</td>
                                    <td>
                                        {% if executive.linkedinId %}
                                            <span class="badge bg-success">
                                                <i class="fas fa-check me-1"></i> Linked
                                            </span>
                                        {% else %}
                                            <span class="badge bg-secondary">
                                                <i class="fas fa-times me-1"></i> Not Linked
                                            </span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        {% if executive.connectionCount is not null %}
                                            {{ executive.connectionCount }}
                                        {% else %}
                                            -
                                        {% endif %}
                                    </td>
                                    <td>
                                        {% if executive.lastSynced %}
                                            {{ executive.lastSynced|date('Y-m-d H:i') }}
                                        {% else %}
                                            -
                                        {% endif %}
                                    </td>
                                    <td>
                                        {% if executive.linkedinId %}
                                            <a href="{{ path('linkedin_executive_connections', {'id': executive.id}) }}" class="btn btn-sm btn-primary">
                                                <i class="fas fa-project-diagram me-1"></i> View Network
                                            </a>
                                        {% else %}
                                            <a href="{{ path('linkedin_auth', {'executiveId': executive.id}) }}" class="btn btn-sm btn-outline-primary">
                                                <i class="fab fa-linkedin me-1"></i> Link Profile
                                            </a>
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}
