{% extends 'base.html.twig' %}

{% block title %}{{ company.name }} - Research Reports{% endblock %}

{% block body %}
<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Research Reports: {{ company.name }}</h1>
        <div>
            <a href="{{ path('company_show', {'id': company.id}) }}" class="btn btn-secondary me-2">
                <i class="fas fa-arrow-left"></i> Back to Company
            </a>
        </div>
    </div>

    {% if reports is empty %}
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i> No research reports available for this company yet.
        </div>

        <div class="text-center mt-4">
            <button type="button" class="btn btn-primary" id="generate-reports-btn" data-company-id="{{ company.id }}">
                <i class="fas fa-robot me-2"></i> Generate Research Reports with AI
            </button>
        </div>
    {% else %}
        <div class="row">
            {% for report in reports %}
                <div class="col-md-6 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">{{ report.title }}</h5>
                            <span class="badge bg-primary">{{ report.reportType }}</span>
                        </div>
                        <div class="card-body">
                            <p class="card-text">{{ report.summary|length > 150 ? report.summary|slice(0, 150) ~ '...' : report.summary }}</p>

                            <div class="d-flex justify-content-between text-muted small">
                                <span><i class="fas fa-calendar me-1"></i> {{ report.publicationDate|date('M d, Y') }}</span>
                                <span><i class="fas fa-user me-1"></i> {{ report.analyst }}</span>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent">
                            <a href="#" class="btn btn-sm btn-outline-primary view-report-btn" data-report-id="{{ report.id }}">
                                View Full Report <i class="fas fa-chevron-right ms-1"></i>
                            </a>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    {% endif %}
</div>

<!-- Report Modal -->
<div class="modal fade" id="reportModal" tabindex="-1" aria-labelledby="reportModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reportModalLabel">Research Report</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="reportModalBody">
                <!-- Report content will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Handle generate reports button
        const generateReportsBtn = document.getElementById('generate-reports-btn');
        if (generateReportsBtn) {
            generateReportsBtn.addEventListener('click', function() {
                const companyId = this.getAttribute('data-company-id');
                generateReports(companyId);
            });
        }

        // Handle view report buttons
        const viewReportBtns = document.querySelectorAll('.view-report-btn');
        viewReportBtns.forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const reportId = this.getAttribute('data-report-id');
                viewReport(reportId);
            });
        });
    });

    // Function to generate reports
    function generateReports(companyId) {
        // Show loading indicator
        const btn = document.getElementById('generate-reports-btn');
        const originalText = btn.innerHTML;
        btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Generating...';
        btn.disabled = true;

        // Make AJAX request
        fetch(`/company/${companyId}/generate-reports`, {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Refresh the page to show new reports
                window.location.reload();
            } else {
                alert('Error: ' + data.message);
                btn.innerHTML = originalText;
                btn.disabled = false;
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while generating reports');
            btn.innerHTML = originalText;
            btn.disabled = false;
        });
    }

    // Function to view a report
    function viewReport(reportId) {
        // Show loading in modal
        const modalBody = document.getElementById('reportModalBody');
        modalBody.innerHTML = '<div class="text-center"><div class="spinner-border" role="status"></div><p class="mt-2">Loading report...</p></div>';

        // Show modal
        const reportModal = new bootstrap.Modal(document.getElementById('reportModal'));
        reportModal.show();

        // Fetch report details
        fetch(`/report/${reportId}`, {
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                modalBody.innerHTML = `<div class="alert alert-danger">${data.error}</div>`;
                return;
            }

            // Update modal content
            document.getElementById('reportModalLabel').textContent = data.title;

            // Format the report content
            let content = `
                <div class="mb-4">
                    <span class="badge bg-primary">${data.reportType}</span>
                    <span class="ms-2 text-muted"><i class="fas fa-calendar me-1"></i> ${data.publicationDate}</span>
                    <span class="ms-2 text-muted"><i class="fas fa-user me-1"></i> ${data.analyst}</span>
                </div>

                <h5>Summary</h5>
                <p>${data.summary}</p>

                <h5>Key Findings</h5>
                <div>${data.content}</div>

                <h5 class="mt-4">Recommendation</h5>
                <div class="d-flex align-items-center">
                    <span class="h3 mb-0 ${data.recommendation === 'Buy' ? 'text-success' : (data.recommendation === 'Sell' ? 'text-danger' : 'text-warning')}">
                        ${data.recommendation}
                    </span>
                    <span class="ms-3">Price Target: <strong>$${data.priceTarget}</strong></span>
                </div>
            `;

            modalBody.innerHTML = content;
        })
        .catch(error => {
            console.error('Error:', error);
            modalBody.innerHTML = '<div class="alert alert-danger">An error occurred while loading the report.</div>';
        });
    }
</script>
{% endblock %}
{% endblock %}
